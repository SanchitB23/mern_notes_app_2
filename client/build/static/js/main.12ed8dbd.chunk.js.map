{"version":3,"sources":["Components/Navbar.js","Components/MidHook.js","Components/NotesHook.js","App.js","serviceWorker.js","index.js"],"names":["Header","Navbar","collapseOnSelect","expand","bg","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","Component","MidHook","props","notestitle","notesdesc","index","notid","Card","style","width","Body","Title","Text","onClick","datacallback","NotesHook","useState","title","setTitle","desc","setDesc","notesobj","setNotesobj","useEffect","Axios","get","then","res","data","catch","err","console","log","handledatacallback","idi","delete","filter","ele","_id","onSubmit","e","preventDefault","entry","shortid","generate","description","post","type","placeholder","value","onChange","target","map","key","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.12ed8dbd.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Nav, Navbar } from \"react-bootstrap\";\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n          <Navbar.Brand href=\"#home\">Notes App</Navbar.Brand>\r\n          <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n          <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n              <Nav.Link href=\"#features\">Home</Nav.Link>\r\n              <Nav.Link href=\"#pricing\">pricing</Nav.Link>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nfunction MidHook(props) {\r\n  //   const [notobj, setNotobj] = useState([]);\r\n  const handleDel = (id) => {\r\n    const { datacallback } = props;\r\n    datacallback(id);\r\n  };\r\n  const { notestitle, notesdesc, index, notid } = props;\r\n  return (\r\n    <div className=\"mx-2 my-2\">\r\n      <Card style={{ width: \"18rem\" }}>\r\n        <Card.Body>\r\n          <Card.Title>\r\n            {index + 1}. {notestitle}\r\n          </Card.Title>\r\n          <Card.Text>{notesdesc}</Card.Text>\r\n          <button className=\"btn btn-primary\" onClick={() => handleDel(notid)}>\r\n            Delete\r\n          </button>\r\n        </Card.Body>\r\n      </Card>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MidHook;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Axios from \"axios\";\r\nimport shortid from \"shortid\";\r\nimport MidHook from \"./MidHook\";\r\nfunction NotesHook() {\r\n  const [title, setTitle] = useState(\"\");\r\n  const [desc, setDesc] = useState(\"\");\r\n  const [notesobj, setNotesobj] = useState([]);\r\n\r\n  useEffect(() => {\r\n    Axios.get(\"http://localhost:8080/\")\r\n      .then((res) => {\r\n        setNotesobj(res.data);\r\n        // console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  }, []);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    // console.log(title);\r\n    // console.log(desc);\r\n    let entry = {\r\n      id: shortid.generate(),\r\n      title: title,\r\n      description: desc,\r\n    };\r\n    // console.log(entry);\r\n    Axios.post(\"http://localhost:8080/add\", entry)\r\n      .then((res) => {\r\n        // console.log(res);\r\n        Axios.get(\"http://localhost:8080/\")\r\n          .then((res) => {\r\n            setNotesobj(res.data);\r\n          })\r\n          .catch((err) => {\r\n            console.log(err);\r\n          });\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    setTitle(\"\");\r\n    setDesc(\"\");\r\n  };\r\n  const handledatacallback = (idi) => {\r\n    Axios.delete(`http://localhost:8080/delete/${idi}`)\r\n      .then((res) => {\r\n        setNotesobj(notesobj.filter((ele) => ele._id !== idi));\r\n        // console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1>welcome to Notes App</h1>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2 mr-sm-2\"\r\n          placeholder=\"Enter title\"\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control mb-2 mr-sm-2\"\r\n          placeholder=\"Enter Desc\"\r\n          value={desc}\r\n          onChange={(e) => setDesc(e.target.value)}\r\n        />\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n      <hr />\r\n      <div className=\"row m-auto\">\r\n        {notesobj.map((ele, index) => {\r\n          return (\r\n            <MidHook\r\n              key={ele.id}\r\n              index={index}\r\n              notid={ele._id}\r\n              notestitle={ele.title}\r\n              notesdesc={ele.description}\r\n              datacallback={handledatacallback}\r\n            />\r\n          );\r\n        })}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotesHook;\r\n","import React from \"react\";\nimport Header from \"./Components/Navbar\";\nimport NotesHook from \"./Components/NotesHook\";\n\nfunction App() {\n  return (\n    <div>\n      <Header />\n      <NotesHook />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}